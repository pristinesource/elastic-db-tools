//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.Azure.SqlDatabase.ElasticScale {
    using System;
    using System.Reflection;
    
    
    /// <summary>
    ///    A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class ReadOnlyScripts {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        internal ReadOnlyScripts() {
        }
        
        /// <summary>
        ///    Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ElasticScale.Client.ReadOnlyScripts", typeof(ReadOnlyScripts).GetTypeInfo().Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///    Overrides the current thread's CurrentUICulture property for all
        ///    resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to  -- Copyright (c) Microsoft. All rights reserved.
        ///-- Licensed under the MIT license. See LICENSE file in the project root for full license information.
        ///
        ///---------------------------------------------------------------------------------------------------
        ///-- Reads from shard map manager version information table if it exists.
        ///---------------------------------------------------------------------------------------------------
        ///
        ///declare @stmt varchar(128)
        ///if object_id(N&apos;__ShardManagement.ShardMapManagerGlobal&apos;, N&apos;U [rest of string was truncated]&quot;;.
        /// </summary>
        public static string CheckShardMapManagerGlobal {
            get {
                return ResourceManager.GetString("CheckShardMapManagerGlobal", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to  -- Copyright (c) Microsoft. All rights reserved.
        ///-- Licensed under the MIT license. See LICENSE file in the project root for full license information.
        ///
        ///---------------------------------------------------------------------------------------------------
        ///-- Reads from shard map manager version information table if it exists.
        ///---------------------------------------------------------------------------------------------------
        ///
        ///declare @stmt varchar(128)
        ///if object_id(N&apos;__ShardManagement.ShardMapManagerLocal&apos;, N&apos;U&apos; [rest of string was truncated]&quot;;.
        /// </summary>
        public static string CheckShardMapManagerLocal {
            get {
                return ResourceManager.GetString("CheckShardMapManagerLocal", resourceCulture);
            }
        }
    }
}
